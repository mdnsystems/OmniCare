import { FormaPagamento } from '../../generated/prisma';
export default class PagamentoService {
    static create(data: any): Promise<{
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }>;
    static findAll(filters?: any): Promise<({
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    })[]>;
    static findById(id: string): Promise<({
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }) | null>;
    static update(id: string, data: any): Promise<{
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }>;
    static delete(id: string): Promise<{
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }>;
    static findByFaturamento(faturamentoId: string): Promise<({
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    })[]>;
    static findByPeriodo(dataInicio: string, dataFim: string): Promise<({
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    })[]>;
    static findByFormaPagamento(formaPagamento: FormaPagamento): Promise<({
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    })[]>;
    static registrarPagamento(data: {
        tenantId: string;
        faturamentoId: string;
        valor: number;
        formaPagamento: FormaPagamento;
        comprovante?: string;
        observacoes?: string;
    }): Promise<{
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }>;
    static estornarPagamento(id: string, motivo: string, tenantId: string): Promise<{
        faturamento: {
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("../../generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
        } & {
            id: string;
            tenantId: string;
            tipo: import("../../generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("../../generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        };
    } & {
        id: string;
        tenantId: string;
        createdAt: Date;
        updatedAt: Date;
        observacoes: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("../../generated/prisma").$Enums.FormaPagamento;
        dataPagamento: Date;
        faturamentoId: string;
        comprovante: string | null;
    }>;
}
