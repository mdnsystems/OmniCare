export default class FaturamentoService {
    static create(data: any): Promise<{
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    }>;
    static findAll(filters?: any): Promise<{
        data: ({
            agendamento: {
                id: string;
                tenantId: string;
                tipo: import("generated/prisma").$Enums.TipoAgendamento;
                createdAt: Date;
                updatedAt: Date;
                pacienteId: string;
                profissionalId: string;
                data: Date;
                horaInicio: string;
                horaFim: string;
                status: import("generated/prisma").$Enums.StatusAgendamento;
                observacoes: string | null;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            } | null;
            paciente: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                profissionalId: string;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                dataNascimento: Date;
                cpf: string;
                telefone: string;
                email: string;
                endereco: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                pais: string;
                convenioNome: string | null;
                convenioNumero: string | null;
                convenioPlano: string | null;
                convenioValidade: Date | null;
            };
            profissional: {
                id: string;
                tenantId: string;
                nome: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("generated/prisma").$Enums.ProfissionalStatus;
                dataNascimento: Date;
                telefone: string;
                email: string;
                numero: string;
                complemento: string | null;
                bairro: string;
                cep: string;
                cidade: string;
                estado: string;
                especialidadeId: string;
                registro: string;
                crm: string | null;
                sexo: string;
                dataContratacao: Date;
                rua: string;
                horarioInicio: string;
                horarioFim: string;
                intervalo: string;
                diasTrabalho: string[];
            };
            prontuario: {
                id: string;
                tenantId: string;
                tipo: import("generated/prisma").$Enums.TipoProntuario;
                createdAt: Date;
                updatedAt: Date;
                pacienteId: string;
                profissionalId: string;
                data: Date;
                observacoes: string | null;
                camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
                descricao: string;
                diagnostico: string | null;
                prescricao: string | null;
            } | null;
        } & {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoFaturamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            status: import("generated/prisma").$Enums.StatusFaturamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
            prontuarioId: string | null;
            agendamentoId: string | null;
            valor: import("generated/prisma/runtime/library").Decimal;
            desconto: import("generated/prisma/runtime/library").Decimal;
            valorFinal: import("generated/prisma/runtime/library").Decimal;
            valorPago: import("generated/prisma/runtime/library").Decimal;
            formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
            dataVencimento: Date;
            dataPagamento: Date | null;
        })[];
        pagination: {
            page: any;
            limit: any;
            total: number;
            pages: number;
        };
    }>;
    static findById(id: string): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    }) | null>;
    static update(id: string, data: any): Promise<{
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    }>;
    static delete(id: string): Promise<{
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    }>;
    static findByPaciente(pacienteId: string): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    })[]>;
    static findByProfissional(profissionalId: string): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    })[]>;
    static findByStatus(status: string): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    })[]>;
    static findVencidos(): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    })[]>;
    static findAVencer(dias?: number): Promise<({
        agendamento: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        prontuario: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoProntuario;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            descricao: string;
            diagnostico: string | null;
            prescricao: string | null;
        } | null;
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoFaturamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        status: import("generated/prisma").$Enums.StatusFaturamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue;
        prontuarioId: string | null;
        agendamentoId: string | null;
        valor: import("generated/prisma/runtime/library").Decimal;
        desconto: import("generated/prisma/runtime/library").Decimal;
        valorFinal: import("generated/prisma/runtime/library").Decimal;
        valorPago: import("generated/prisma/runtime/library").Decimal;
        formaPagamento: import("generated/prisma").$Enums.FormaPagamento;
        dataVencimento: Date;
        dataPagamento: Date | null;
    })[]>;
    static exportar(filtros?: any, formato?: string): Promise<Buffer<ArrayBuffer>>;
    static importar(file: any): Promise<{
        sucessos: number;
        erros: string[];
    }>;
}
