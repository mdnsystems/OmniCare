import { ProntuarioInput } from '../validators/prontuario.validator';
declare const _default: {
    create(data: ProntuarioInput & {
        tenantId: string;
    }): Promise<{
        id: string;
        tenantId: string;
        tipo: import("../../generated/prisma").$Enums.TipoProntuario;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        descricao: string;
        diagnostico: string | null;
        prescricao: string | null;
    }>;
    findAll(tenantId?: string): Promise<({
        anamnese: {
            id: string;
            tenantId: string;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            prontuarioId: string;
            templateId: string;
            campos: import("generated/prisma/runtime/library").JsonValue;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("../../generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        exames: {
            id: string;
            tenantId: string;
            tipo: string;
            createdAt: Date;
            updatedAt: Date;
            data: Date;
            observacoes: string | null;
            prontuarioId: string;
            resultado: string;
            arquivos: import("generated/prisma/runtime/library").JsonValue;
        }[];
    } & {
        id: string;
        tenantId: string;
        tipo: import("../../generated/prisma").$Enums.TipoProntuario;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        descricao: string;
        diagnostico: string | null;
        prescricao: string | null;
    })[]>;
    findById(id: string, tenantId?: string): Promise<({
        anamnese: {
            id: string;
            tenantId: string;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            prontuarioId: string;
            templateId: string;
            campos: import("generated/prisma/runtime/library").JsonValue;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("../../generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        exames: {
            id: string;
            tenantId: string;
            tipo: string;
            createdAt: Date;
            updatedAt: Date;
            data: Date;
            observacoes: string | null;
            prontuarioId: string;
            resultado: string;
            arquivos: import("generated/prisma/runtime/library").JsonValue;
        }[];
    } & {
        id: string;
        tenantId: string;
        tipo: import("../../generated/prisma").$Enums.TipoProntuario;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        descricao: string;
        diagnostico: string | null;
        prescricao: string | null;
    }) | null>;
    update(id: string, data: ProntuarioInput & {
        tenantId?: string;
    }, tenantId?: string): Promise<{
        anamnese: {
            id: string;
            tenantId: string;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            prontuarioId: string;
            templateId: string;
            campos: import("generated/prisma/runtime/library").JsonValue;
        } | null;
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("../../generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
        exames: {
            id: string;
            tenantId: string;
            tipo: string;
            createdAt: Date;
            updatedAt: Date;
            data: Date;
            observacoes: string | null;
            prontuarioId: string;
            resultado: string;
            arquivos: import("generated/prisma/runtime/library").JsonValue;
        }[];
    } & {
        id: string;
        tenantId: string;
        tipo: import("../../generated/prisma").$Enums.TipoProntuario;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        descricao: string;
        diagnostico: string | null;
        prescricao: string | null;
    }>;
    delete(id: string, tenantId?: string): Promise<{
        id: string;
        tenantId: string;
        tipo: import("../../generated/prisma").$Enums.TipoProntuario;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        descricao: string;
        diagnostico: string | null;
        prescricao: string | null;
    }>;
};
export default _default;
