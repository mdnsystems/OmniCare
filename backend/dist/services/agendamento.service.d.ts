import { AgendamentoInput } from '../validators/agendamento.validator';
declare const _default: {
    create(data: AgendamentoInput & {
        tenantId: string;
    }): Promise<{
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    findAll(tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findById(id: string, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }) | null>;
    update(id: string, data: AgendamentoInput & {
        tenantId?: string;
    }, tenantId?: string): Promise<{
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    delete(id: string, tenantId?: string): Promise<{
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    confirmar(id: string, tenantId?: string): Promise<{
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    cancelar(id: string, motivo: string, tenantId?: string): Promise<{
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    remarcar(id: string, novaData: string, novaHoraInicio: string, novaHoraFim: string, tenantId?: string): Promise<{
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    realizar(id: string, tenantId?: string): Promise<{
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    }>;
    findByData(data: string, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findByProfissional(profissionalId: string, data?: string, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findByPaciente(pacienteId: string, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findHoje(tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findSemana(dataInicio?: string, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    findMes(ano?: number, mes?: number, tenantId?: string): Promise<({
        paciente: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            profissionalId: string;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
            dataNascimento: Date;
            cpf: string;
            telefone: string;
            email: string;
            endereco: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            pais: string;
            convenioNome: string | null;
            convenioNumero: string | null;
            convenioPlano: string | null;
            convenioValidade: Date | null;
        };
        profissional: {
            id: string;
            tenantId: string;
            nome: string;
            createdAt: Date;
            updatedAt: Date;
            status: import("generated/prisma").$Enums.ProfissionalStatus;
            dataNascimento: Date;
            telefone: string;
            email: string;
            numero: string;
            complemento: string | null;
            bairro: string;
            cep: string;
            cidade: string;
            estado: string;
            especialidadeId: string;
            registro: string;
            crm: string | null;
            sexo: string;
            dataContratacao: Date;
            rua: string;
            horarioInicio: string;
            horarioFim: string;
            intervalo: string;
            diasTrabalho: string[];
        };
    } & {
        id: string;
        tenantId: string;
        tipo: import("generated/prisma").$Enums.TipoAgendamento;
        createdAt: Date;
        updatedAt: Date;
        pacienteId: string;
        profissionalId: string;
        data: Date;
        horaInicio: string;
        horaFim: string;
        status: import("generated/prisma").$Enums.StatusAgendamento;
        observacoes: string | null;
        camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
    })[]>;
    confirmarViaLink(token: string): Promise<null>;
    cancelarViaLink(token: string): Promise<null>;
    verificarDisponibilidade(profissionalId: string, data: string, horaInicio: string, horaFim: string, excludeId?: string, tenantId?: string): Promise<{
        disponivel: boolean;
        conflitos: {
            id: string;
            tenantId: string;
            tipo: import("generated/prisma").$Enums.TipoAgendamento;
            createdAt: Date;
            updatedAt: Date;
            pacienteId: string;
            profissionalId: string;
            data: Date;
            horaInicio: string;
            horaFim: string;
            status: import("generated/prisma").$Enums.StatusAgendamento;
            observacoes: string | null;
            camposPersonalizados: import("generated/prisma/runtime/library").JsonValue | null;
        }[];
    }>;
    getHorariosDisponiveis(profissionalId: string, data: string, tenantId?: string): Promise<{
        inicio: string;
        fim: string;
    }[]>;
    getEstatisticas(periodo?: {
        inicio: string;
        fim: string;
    }, tenantId?: string): Promise<{
        total: number;
        realizados: number;
        cancelados: number;
        confirmados: number;
        pendentes: number;
        taxaSucesso: number;
        taxaCancelamento: number;
        porTipo: {
            CONSULTA: number;
            RETORNO: number;
            EXAME: number;
            PROCEDIMENTO: number;
        };
        porProfissional: number;
    }>;
    enviarLembrete(id: string, tenantId?: string): Promise<{
        message: string;
    }>;
    importar(data: any[], tenantId?: string): Promise<{
        message: string;
        quantidade: number;
    }>;
    exportar(filters?: any, tenantId?: string): Promise<Buffer<ArrayBuffer>>;
};
export default _default;
