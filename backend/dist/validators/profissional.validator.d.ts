import { z } from 'zod';
import { ProfissionalStatus } from '../types/enums';
export declare const profissionalSchema: z.ZodObject<{
    nome: z.ZodString;
    especialidadeId: z.ZodString;
    registro: z.ZodString;
    crm: z.ZodString;
    email: z.ZodString;
    telefone: z.ZodString;
    sexo: z.ZodString;
    dataNascimento: z.ZodString;
    dataContratacao: z.ZodString;
    status: z.ZodNativeEnum<typeof ProfissionalStatus>;
    rua: z.ZodString;
    numero: z.ZodString;
    complemento: z.ZodOptional<z.ZodString>;
    bairro: z.ZodString;
    cidade: z.ZodString;
    estado: z.ZodString;
    cep: z.ZodString;
    horarioInicio: z.ZodString;
    horarioFim: z.ZodString;
    intervalo: z.ZodString;
    diasTrabalho: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    nome: string;
    status: ProfissionalStatus;
    dataNascimento: string;
    telefone: string;
    email: string;
    numero: string;
    bairro: string;
    cep: string;
    cidade: string;
    estado: string;
    especialidadeId: string;
    registro: string;
    crm: string;
    sexo: string;
    dataContratacao: string;
    rua: string;
    horarioInicio: string;
    horarioFim: string;
    intervalo: string;
    diasTrabalho: string[];
    complemento?: string | undefined;
}, {
    nome: string;
    status: ProfissionalStatus;
    dataNascimento: string;
    telefone: string;
    email: string;
    numero: string;
    bairro: string;
    cep: string;
    cidade: string;
    estado: string;
    especialidadeId: string;
    registro: string;
    crm: string;
    sexo: string;
    dataContratacao: string;
    rua: string;
    horarioInicio: string;
    horarioFim: string;
    intervalo: string;
    diasTrabalho: string[];
    complemento?: string | undefined;
}>;
export type ProfissionalInput = z.infer<typeof profissionalSchema>;
